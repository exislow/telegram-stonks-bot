"""Application Configuration."""


class Config(object):
    """Parent configuration class."""

    DEBUG = False
    TESTING = False

    PERSISTENCE_NAME = 'stonks_store'
    WORKERS = 32
    # TODO: Fine tune this. Is really 4096 possible (kep in mind <pre></pre> tags etc.)
    MAX_LEN_MSG = 4076

    USER_ID = {
        'master': <ID>,
        'admins': [<ID>]
    }

    LOCAL = {
        'tz': 'Europe/Berlin',
        'currency': 'EUR'
    }

    API = {
        'telegram_bot_token': '<TELEGRAM BOT TOKEN>',
        'finance_currency': 'USD',
        'alphavantage_api_key': '<ALPHAVANTAGE API KEY>',
        'reddit': {
            'client_id': '<CLIENT ID>',
            'client_secret': '<CLIENT SECRET>',
            'username': '<USERNAME>',
            'user_agent': '<ANY USER AGENT STRING>',
            'password': '<USER PASSWORD>'
        },
        'giphy_key': '<GIPHY API KEY>'
    }

    OHLC = {
        'adj_close': 'Adj Close'
    }

    JOBS = {
        'check_rise_fall_day': {
            'interval_sec': 300,
            'threshold_perc_rise': 5,
            'threshold_perc_fall': -5,
            'dict': {
                'daily': 'daily',
                'rise': 'msg_rise_at',
                'fall': 'msg_fall_at'
            }
        }
    }

    INTERNALS = {
        'groups': 'groups',
        'users': 'users',
        'channels': 'channels',
        'data': 'data',
        'cause_user': 'cause_user',
        'stock': 'stonks'
    }

    LIMITS = {
        'default': {
            'private': {
                'symbols_max': 30
            },
            'group': {
                'symbols_max': 60
            },
            'channel': {
                'symbols_max': 60
            }
        }
    }


class DevelopmentConfig(Config):
    """Configurations for Development."""

    def __init__(self):
        Config.__init__(self)

        self.DEBUG = True


class TestingConfig(Config):
    """Configurations for Testing."""

    def __init__(self):
        Config.__init__(self)

        self.TESTING = True
        self.DEBUG = True


class StagingConfig(Config):
    """Configurations for Staging."""

    def __init__(self):
        Config.__init__(self)

        self.DEBUG = False


class ProductionConfig(Config):
    """Configurations for Production."""

    def __init__(self):
        Config.__init__(self)
        self.DEBUG = False
        self.TESTING = False


config = {
    'development': DevelopmentConfig,
    'testing': TestingConfig,
    'staging': StagingConfig,
    'production': ProductionConfig,

    'default': ProductionConfig
}
